buildscript {
    ext.kotlin_version = '2.1.0'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.15'
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

// Enforce Media3 1.4.1 across all modules to keep VdoCipher compatible
subprojects {
    configurations.all {
        resolutionStrategy {
            // Force commonly used artifacts
            force \
                'androidx.media3:media3-common:1.4.1', \
                'androidx.media3:media3-exoplayer:1.4.1', \
                'androidx.media3:media3-exoplayer-dash:1.4.1', \
                'androidx.media3:media3-exoplayer-hls:1.4.1', \
                'androidx.media3:media3-exoplayer-smoothstreaming:1.4.1', \
                'androidx.media3:media3-exoplayer-rtsp:1.4.1', \
                'androidx.media3:media3-ui:1.4.1', \
                'androidx.media3:media3-session:1.4.1', \
                'androidx.media3:media3-extractor:1.4.1', \
                'androidx.media3:media3-container:1.4.1', \
                'androidx.media3:media3-datasource:1.4.1', \
                'androidx.media3:media3-datasource-okhttp:1.4.1', \
                'androidx.media3:media3-datasource-cronet:1.4.1', \
                'androidx.media3:media3-database:1.4.1', \
                'androidx.media3:media3-decoder:1.4.1'

            // As a safety net, align any remaining media3 artifacts
            eachDependency { details ->
                if (details.requested.group == 'androidx.media3') {
                    details.useVersion '1.4.1'
                    details.because 'vdocipher_flutter expects Media3 1.4.1'
                }
            }
        }
    }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}